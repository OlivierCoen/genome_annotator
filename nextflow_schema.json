{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/genome_annotator/master/nextflow_schema.json",
    "title": "genome_annotator pipeline parameters",
    "description": "Pipeline dedicated to genome annotation",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv|tsv|yaml|json)$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "busco_lineage": {
                    "type": "string",
                    "description": "Busco lineage to use.",
                    "default": "auto",
                    "help": "Example: arthropoda_odb10. See list of lineages at https://busco.ezlab.org/list_of_lineages.html. Otherwise, choose auto / auto_prok / auto_euk to et Busco automatically detect which lineage to use."
                }
            }
        },
        "skip_options": {
          "title": "Options for skipping specific steps",
          "type": "object",
          "fa_icon": "fas fa-terminal",
          "description": "Options for skipping specific steps",
          "properties": {
             "skip_masking": {
                  "type": "boolean",
                  "description": "Skip genome masking",
                  "fa_icon": "fas fa-hand-scissors"
              },
             "skip_functional_annotation": {
                  "type": "boolean",
                  "description": "Skip functional annotation",
                  "fa_icon": "fas fa-hand-scissors"
              }
          }
        },
        "functional_annotation_options": {
          "title": "Options for functional annotation",
          "type": "object",
          "fa_icon": "fas fa-terminal",
          "description": "Options for functional annotation",
          "properties": {
             "interproscan_db_url": {
                  "type": "string",
                  "default": "http://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.75-106.0/alt/interproscan-data-5.75-106.0.tar.gz",
                  "help_text": "This allows the user to change the InterProScan database version that the pipeline will download for you automatically. To instead use a pre-downloaded database, please supply its path to `--protein_annotation_interproscan_db`. Changing this URL allows for the use of the latest database release. By default this is set to `http://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.72-103.0/interproscan-5.72-103.0-64-bit.tar.gz`. ",
                  "description": "Change the database version used for annotation.",
                  "fa_icon": "fas fa-database"
              },
               "interproscan_db": {
                  "type": "string",
                  "format": "file-path",
                  "help_text": "Use this to supply the path to a pre-downloaded InterProScan database. This can be any unzipped InterProScan version.\n\nFor more details on where to find different InterProScan databases see tool [documentation](https://interproscan-docs.readthedocs.io/en/latest/UserDocs.html#obtaining-a-copy-of-interproscan).\n",
                  "description": "Path to pre-downloaded InterProScan database.",
                  "fa_icon": "fas fa-database"
              }
          }
        },
        "dev_options": {
          "title": "Dev purposes options",
          "type": "object",
          "fa_icon": "fas fa-terminal",
          "description": "Options for dev purposes only",
          "properties": {
             "codon_usage_id": {
                  "type": "integer",
                  "default": 1,
                  "description": "ID of the codon usage table to use (as defined in perl's Bio::Tools::CodonTable).",
                  "fa_icon": "fas fa-hand-scissors",
                  "help_text": "For invertebrates / vertebrates / fungi, you should skip this parameter. It is important for mitochondrial genomes. For an extensive list of codon usage IDs, see https://forge.inrae.fr/genotoul-bioinfo/ngspipelines/-/blob/e628625ae2e44845ecbf3deb19637fcb1369b3f9/core/lib/Bio/Tools/CodonTable.pm"
              }
          }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/skip_options"
        },
        {
            "$ref": "#/$defs/functional_annotation_options"
        },
        {
            "$ref": "#/$defs/dev_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
